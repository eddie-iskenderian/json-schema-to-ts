/**
 * This file was automatically generated by Slyp's json-schema to typescript generator.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the generator to regenerate this file.
 */
/**
 * A consumer that has been registered by a bank for the Slyp Smart Receipts solution.
 */
export interface Consumer {
  /**
   * Slyp's external reference ID for the given consumer.
   * This field cannot be set or edited. Generated by Slyp and used for lookups, updates, and deletes.
   */
  xref?: XReference | null;
  /**
   * Optional Client provided ID for the given consumer. Must be unique.
   */
  external_id?: string | null;
  /**
   * The street address of the account holder. Specify suburb, state, postcode.
   */
  address?: StreetAddress | null;
  /**
   * The account holders date of birth structure, consisting of a date field in "YYYY-MM-DD" format,
   * and an optional (default: day) fidelity field which can be one of age_range, year, month or day
   * representing the accuracy of the date. See examples below.
   */
  date_of_birth?: DateOfBirth | null;
  /**
   * The account holders gender. Either male, female or a string for other where required.
   */
  gender?: Gender | null;
  /**
   * Is this consumer active to receive smart receipts.
   */
  is_active?: boolean;
}

export const makeConsumer = (input: {
  xref?: XReference | null;
  external_id?: string | null;
  address?: StreetAddress | null;
  date_of_birth?: DateOfBirth | null;
  gender?: Gender | null;
  is_active?: boolean;
}): Consumer => ({
  xref: input.xref === undefined ? null : input.xref,
  external_id: input.external_id === undefined ? null : input.external_id,
  address: input.address === undefined ? null : input.address,
  date_of_birth: input.date_of_birth === undefined ? null : input.date_of_birth,
  gender: input.gender === undefined ? null : input.gender,
  is_active: input.is_active === undefined ? true : input.is_active
});

/**
 * Structure containing the consumer's date of birth.
 */
export interface DateOfBirth {
  /**
   * A date in YYYY-MM-DD format.
   * The string format must remain consistent even when providing low fidelity information.
   * For example, if providing only a consumers year of birth, the month and day field may both simply be set to 01.
   */
  date: string;
  /**
   * A fidelity of the date provided.
   * The fidelity can be specified as age_range, year, month, day.
   * When providing only age range information, the date in the middle of the age range
   * should be provided. For example, if it is currently 2020 and a consumer is between 24 (born 1996) and
   * 35 (born 1985) years old, the mid point date may be provided.
   */
  fidelity: DobFidelity;
}

export const makeDateOfBirth = (input: {
  date: string;
  fidelity: DobFidelity;
}): DateOfBirth => ({
  date: input.date,
  fidelity: input.fidelity
});

export type DobFidelity = "age_range" | "year" | "month" | "day";

export type GenderInternalMaleFemale = "male" | "female";

export interface GenderInternalSelfDescribe {
  self_describe: string;
}

export const makeGenderInternalSelfDescribe = (input: {
  self_describe: string;
}): GenderInternalSelfDescribe => ({
  self_describe: input.self_describe
});

export type Gender = GenderInternalMaleFemale | GenderInternalSelfDescribe;

/**
 * Structure containing the consumer's address information.
 */
export interface StreetAddress {
  /**
   * The state, one of NSW, VIC, WA, QLD, NT, TAS or ACT.
   */
  state?: string | null;
  /**
   * The four digit (AU) postcode.
   */
  postcode: string;
  /**
   * The ISO 3166 Alpha-2 country code. Australia is AU.
   */
  country_code: string;
}

export const makeStreetAddress = (input: {
  state?: string | null;
  postcode: string;
  country_code: string;
}): StreetAddress => ({
  state: input.state === undefined ? null : input.state,
  postcode: input.postcode,
  country_code: input.country_code
});

/**
 * A client or external facing refernce to a Slyp entity.
 */
export type XReference = string;
